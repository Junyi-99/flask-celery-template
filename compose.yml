services:
  redis:
    image: redis:6.2-alpine
    restart: always
    # ports:
      # - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - cache:/redis-data

  flask:
    build: .
    image: web
    ports:
      - '25555:5555'
    command: flask --app server run --host 0.0.0.0 --port 5555
    environment:
      - FLASK_DEBUG=1
      - APP_SETTINGS=project.server.config.DevelopmentConfig
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD}@redis:6379/0
    volumes:
      - .:/flask-celery-app
      - uploaded:/uploads
    depends_on:
      - redis

  celery-worker:
    build: .
    command: celery --app server.celery_app worker --loglevel=info --logfile=celery.log --pool solo
    volumes:
      - .:/flask-celery-app
      - uploaded:/uploads
    environment:
      - FLASK_DEBUG=1
      - APP_SETTINGS=project.server.config.DevelopmentConfig
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD}@redis:6379/0
      - CUDA_VISIBLE_DEVICES=1
    depends_on:
      - flask
      - redis
    # deploy: # Uncomment this block to enable GPU support
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: all
    #           capabilities: [gpu]

  celery-dashboard:
    build: .
    command: celery --app server.celery_app flower --port=5555 --loglevel=info --logfile=flower.log
    ports:
      - 25556:5555
    volumes:
      - .:/flask-celery-app
    environment:
      - FLASK_DEBUG=1
      - APP_SETTINGS=project.server.config.DevelopmentConfig
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD}@redis:6379/0
    depends_on:
      - flask
      - redis
      - celery-worker

volumes:
  cache:
    driver: local
  uploaded:
    driver: local
